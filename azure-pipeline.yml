trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables: 
  PENELOPE_VERSION: 0.1.0

# Images to build
jobs:
- job: Base
  strategy:
    matrix:
      centos:
        BASE_IMAGE:     centos
        BASE_IMAGE_TAG: 7
      ubuntu:
        BASE_IMAGE:     ubuntu
        BASE_IMAGE_TAG: 16.04
  steps:
    - task: Docker@2
      displayName: Login to Docker Hub
      inputs:
        command: login
        containerRegistry: DockerHub
    - task: Docker@2
      displayName: Build image
      inputs:
        command: build
        Dockerfile: base.dockerfile
        repository: liambindle/penelope
        tags: $(PENELOPE_VERSION)-$(BASE_IMAGE)$(BASE_IMAGE_TAG)
        arguments: |
          --build-arg BASE_IMAGE=$(BASE_IMAGE)
          --build-arg BASE_IMAGE_TAG=$(BASE_IMAGE_TAG) 
    - task: Docker@2
      displayName: Push image
      inputs:
        containerRegistry: DockerHub
        repository: liambindle/penelope
        command: push
        tags: |
          $(PENELOPE_VERSION)-$(BASE_IMAGE)$(BASE_IMAGE_TAG)
- job: MPI
  dependsOn: Base
  strategy:
    matrix:
      ubuntu_openmpi304:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
        SPACK_SPEC:     openmpi@3.0.4 arch=x86_64
        SPEC_TAG:       openmpi3.0.4
      ubuntu_openmpi314:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
        SPACK_SPEC:     openmpi@3.1.4 arch=x86_64
        SPEC_TAG:       openmpi3.1.4
      ubuntu_openmpi401:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
        SPACK_SPEC:     openmpi@4.0.1 arch=x86_64
        SPEC_TAG:       openmpi4.0.1

      ubuntu_mpich304:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
        SPACK_SPEC:     mpich@3.0.4  arch=x86_64
        SPEC_TAG:       mpich3.0.4
      ubuntu_mpich314:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
        SPACK_SPEC:     mpich@3.1.4 arch=x86_64
        SPEC_TAG:       mpich3.1.4
      ubuntu_mpich321:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
        SPACK_SPEC:     mpich@3.2.1 arch=x86_64
        SPEC_TAG:       mpich3.2.1
      ubuntu_mpich331:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
        SPACK_SPEC:     mpich@3.3.1 arch=x86_64
        SPEC_TAG:       mpich3.3.1
      centos_mpich331:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-centos7
        SPACK_SPEC:     mpich@3.3.1 arch=x86_64
        SPEC_TAG:       mpich3.3.1

      ubuntu_mvapich21:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
        SPACK_SPEC:     mvapich2@2.1 fabrics=mrail arch=x86_64
        SPEC_TAG:       mvapich2.1
      ubuntu_mvapich22:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
        SPACK_SPEC:     mvapich2@2.2 fabrics=mrail arch=x86_64
        SPEC_TAG:       mvapich2.2
      ubuntu_mvapich231:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
        SPACK_SPEC:     mvapich2@2.3.1 fabrics=mrail arch=x86_64
        SPEC_TAG:       mvapich2.3.1

      centos_openmpi314:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-centos7
        SPACK_SPEC:     openmpi@3.1.4 arch=x86_64
        SPEC_TAG:       openmpi3.1.4

      # ubuntu_intelmpi2019:
      #   BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
      #   SPACK_SPEC:     intel-mpi@2019.4.243
      #   SPEC_TAG:       intelmpi2019.4.243
      # ubuntu_intelmpi2018:
      #   BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
      #   SPACK_SPEC:     intel-mpi@2018.4.274
      #   SPEC_TAG:       intelmpi2018.4.274
      # ubuntu_intelmpi2017:
      #   BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04
      #   SPACK_SPEC:     intel-mpi@2017.4.239
      #   SPEC_TAG:       intelmpi2017.4.239
  steps:
    - task: Docker@2
      displayName: Login to Docker Hub
      inputs:
        command: login
        containerRegistry: DockerHub
    - task: Docker@2
      displayName: Build image
      inputs:
        command: build
        Dockerfile: spack.dockerfile
        repository: liambindle/penelope
        tags: $(BASE_IMAGE_TAG)-$(SPEC_TAG)
        arguments: |
          --build-arg BASE_IMAGE_TAG=$(BASE_IMAGE_TAG)
          --build-arg SPACK_SPEC="$(SPACK_SPEC)"
    - task: Docker@2
      displayName: Push image
      inputs:
        containerRegistry: DockerHub
        repository: liambindle/penelope
        command: push
        tags: $(BASE_IMAGE_TAG)-$(SPEC_TAG)
- job: ESMF
  dependsOn: MPI
  strategy:
    matrix:
      ubuntu_openmpi304:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-openmpi3.0.4
        SPACK_SPEC:     esmf@8.0.0 arch=x86_64 ^openmpi@3.0.4
        SPEC_TAG:       esmf8.0.0
      ubuntu_openmpi314:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-openmpi3.1.4
        SPACK_SPEC:     esmf@8.0.0 arch=x86_64 ^openmpi@3.1.4
        SPEC_TAG:       esmf8.0.0
      ubuntu_openmpi401:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-openmpi4.0.1
        SPACK_SPEC:     esmf@8.0.0 arch=x86_64 ^openmpi@4.0.1
        SPEC_TAG:       esmf8.0.0

      ubuntu_mpich304:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-mpich3.0.4
        SPACK_SPEC:     esmf@8.0.0 arch=x86_64 ^mpich@3.0.4
        SPEC_TAG:       esmf8.0.0
      ubuntu_mpich314:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-mpich3.1.4
        SPACK_SPEC:     esmf@8.0.0 arch=x86_64 ^mpich@3.1.4
        SPEC_TAG:       esmf8.0.0
      ubuntu_mpich321:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-mpich3.2.1
        SPACK_SPEC:     esmf@8.0.0 arch=x86_64 ^mpich@3.2.1
        SPEC_TAG:       esmf8.0.0
      ubuntu_mpich331:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-mpich3.3.1
        SPACK_SPEC:     esmf@8.0.0 arch=x86_64 ^mpich@3.3.1
        SPEC_TAG:       esmf8.0.0
      centos_mpich331:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-centos7-mpich3.3.1
        SPACK_SPEC:     esmf@8.0.0 arch=x86_64 ^mpich@3.3.1
        SPEC_TAG:       esmf8.0.0

      ubuntu_mvapich21:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-mvapich2.1
        SPACK_SPEC:     esmf@8.0.0 arch=x86_64 ^mvapich2@2.1 fabrics=mrail
        SPEC_TAG:       esmf8.0.0
      ubuntu_mvapich22:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-mvapich2.2
        SPACK_SPEC:     esmf@8.0.0 arch=x86_64 ^mvapich2@2.2 fabrics=mrail
        SPEC_TAG:       esmf8.0.0
      ubuntu_mvapich231:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-mvapich2.3.1
        SPACK_SPEC:     esmf@8.0.0 arch=x86_64 ^mvapich2@2.3.1 fabrics=mrail
        SPEC_TAG:       esmf8.0.0

      centos_openmpi314:
        BASE_IMAGE_TAG: $(PENELOPE_VERSION)-centos7-openmpi3.1.4
        SPACK_SPEC:     esmf@8.0.0 arch=x86_64 ^openmpi@3.1.4
        SPEC_TAG:       esmf8.0.0

      # ubuntu_intelmpi2019:
      #   BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-intel-mpi2019.4.243
      #   SPACK_SPEC:     esmf@8.0.0 ^intel-mpi@2019.4.243
      #   SPEC_TAG:       esmf8.0.0
      # ubuntu_intelmpi2018:
      #   BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-intel-mpi2018.4.274
      #   SPACK_SPEC:     esmf@8.0.0 ^intel-mpi@2018.4.274
      #   SPEC_TAG:       esmf8.0.0
      # ubuntu_intelmpi2017:
      #   BASE_IMAGE_TAG: $(PENELOPE_VERSION)-ubuntu16.04-intel-mpi2017.4.239
      #   SPACK_SPEC:     esmf@8.0.0 ^intel-mpi@2017.4.239
      #   SPEC_TAG:       esmf8.0.0
  steps:
    - task: Docker@2
      displayName: Login to Docker Hub
      inputs:
        command: login
        containerRegistry: DockerHub
    - task: Docker@2
      displayName: Build image
      inputs:
        command: build
        Dockerfile: spack.dockerfile
        repository: liambindle/penelope
        tags: $(BASE_IMAGE_TAG)-$(SPEC_TAG)
        arguments: |
          --build-arg BASE_IMAGE_TAG=$(BASE_IMAGE_TAG)
          --build-arg SPACK_SPEC="$(SPACK_SPEC)"
    - task: Docker@2
      displayName: Push image
      inputs:
        containerRegistry: DockerHub
        repository: liambindle/penelope
        command: push
        tags: $(BASE_IMAGE_TAG)-$(SPEC_TAG)